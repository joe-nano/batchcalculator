TODO
=====

* add options (either from the edit dialog or a new menu in the menu bar) to
  extend (add/remove/modify) entries in the database from the GUI
* write a django app to expose the calculator functionality through a
  web form
* add an option to print volumes instead of masses for liquids
* add an option to select a tex template in the export tex dialog
* add an option to export to HTML, and plain text
* add an option to calculate the pH of the batch
* rewrite the basic classes used in the calculator so that the interface and
  manipulation become simpler
* add a button to rescale to the mass of one on the reactants
* add consistency check to the database:
    - check for duplicate entries in chemicals, components, and batch,
    - check if all the components have sources,
    - check if all the chemicals are sources for existing components
* add an option to print a report form the inverse calculation,
  masses -> molar ratios

DONE
====

* reduce the number of lists in the input panel to 2 instead of 4, leave only
  components and reactants,
* switch to ObjectListView instead of ListCtrl for lists in the input and 
  output panels,
* add an option to calculate the molar ratios of the components based on the
  masses of the reactants (for reconstructing the values from old papers)
* make a default to select all reactants for scaling to sample
